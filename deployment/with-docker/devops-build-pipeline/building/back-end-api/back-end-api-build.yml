trigger:
  branches:
    include:
      - master
  paths:
    include:
      - /back-end-api
      - /deployment/with-docker/devops-build-pipeline/building/back-end-api

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: '$(acrUrl)/back-end-api:$(build.buildId)'

steps:
  - script: cd ./back-end-api && yarn --production --silent --modules-folder ../deployment/with-docker/devops-build-pipeline/building/back-end-api/node_modules
    displayName: 'Installing Node packages'

  - script: mkdir -p ./deployment/with-docker/devops-build-pipeline/building/back-end-api/js && cp ./back-end-api/*.js ./deployment/with-docker/devops-build-pipeline/building/back-end-api/js
    displayName: 'Copying javascript files to deployment directory'

  - script: cd ./deployment/with-docker/devops-build-pipeline/building/back-end-api && docker build -t $(imageName) .
    displayName: 'Building Docker image'

  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscriptionEndpoint: '$(azureSubscriptionEndpoint)'
      azureContainerRegistry: '$(azureContainerRegistry)'
      includeSourceTags: true
      command: 'Push an Image'
      containerregistrytype: Azure Container Registry
      imageName: $(imageName)
      imageNamesPath:
      restartPolicy: always

  - script: |
      cd ./deployment/with-docker/devops-build-pipeline/deploying
      mkdir -p artifacts
      sed 's/\[build-id\]/$(build.buildId)/' < back-end-api-deployment-template.yml >  sed 's/\[acrUrl\]/$(acrUrl)/' > ./artifacts/back-end-api-deployment.yml
    displayName: 'Building Kubernetes  deployment file'

  - task: PublishBuildArtifacts@1
    displayName: 'Push Kubernetes deplyoment file to artifacts'
    inputs:
      ArtifactName: 'kubernetes-deplyoment-artifacts'
      PathtoPublish: './deployment/with-docker/devops-build-pipeline/deploying/artifacts'
