# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# Read more about triggers at https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?view=azure-devops&tabs=yaml
trigger:
  branches:
    include:
      - master
  paths:
    include:
      - /front-end-app
      - /deployment/with-docker/devops-build-pipeline/building/front-end-app

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: '$(acrUrl)/front-end-app:$(build.buildId)'

steps:
  - script: |
      cd ./front-end-app
      yarn
      yarn build
      cp -au ./build/. ../deployment/with-docker/devops-build-pipeline/building/front-end-app/build
    displayName: 'Building JavaScript'

  - script: |
      cd ./deployment/with-docker/devops-build-pipeline/building/front-end-app
      docker build -t $(imageName) .
      docker images
    displayName: 'Building Docker image'

  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscriptionEndpoint: '$(azureSubscriptionEndpoint)'
      azureContainerRegistry: '$(azureContainerRegistry)'
      includeSourceTags: true
      command: 'Push an Image'
      containerregistrytype: Azure Container Registry
      imageName: $(imageName)
      imageNamesPath:
      restartPolicy: always

  - script: |
      cd ./deployment/with-docker/devops-build-pipeline/deploying
      mkdir -p artifacts
      echo $(acrLogin)
      sed 's/\[build-id\]/$(build.buildId)/' < front-end-app-deployment-template.yml > ./artifacts/front-end-app-deployment.yml
    displayName: 'Building Kubernetes  deployment file'

  - task: PublishBuildArtifacts@1
    displayName: 'Push Kubernetes deplyoment file to artifacts'
    inputs:
      ArtifactName: 'kubernetes-deplyoment-artifacts'
      PathtoPublish: './deployment/with-docker/devops-build-pipeline/deploying/artifacts'
